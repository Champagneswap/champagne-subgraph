// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AuctionBid extends ethereum.Event {
  get params(): AuctionBid__Params {
    return new AuctionBid__Params(this);
  }
}

export class AuctionBid__Params {
  _event: AuctionBid;

  constructor(event: AuctionBid) {
    this._event = event;
  }

  get auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AuctionClaim extends ethereum.Event {
  get params(): AuctionClaim__Params {
    return new AuctionClaim__Params(this);
  }
}

export class AuctionClaim__Params {
  _event: AuctionClaim;

  constructor(event: AuctionClaim) {
    this._event = event;
  }

  get auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get isAdmin(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class AuctionClose extends ethereum.Event {
  get params(): AuctionClose__Params {
    return new AuctionClose__Params(this);
  }
}

export class AuctionClose__Params {
  _event: AuctionClose;

  constructor(event: AuctionClose) {
    this._event = event;
  }

  get auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get participationLimit(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get numberParticipants(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AuctionStart extends ethereum.Event {
  get params(): AuctionStart__Params {
    return new AuctionStart__Params(this);
  }
}

export class AuctionStart__Params {
  _event: AuctionStart;

  constructor(event: AuctionStart) {
    this._event = event;
  }

  get auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get startBlock(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get endBlock(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get initialBidAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get leaderboard(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class NewMaxAuctionLength extends ethereum.Event {
  get params(): NewMaxAuctionLength__Params {
    return new NewMaxAuctionLength__Params(this);
  }
}

export class NewMaxAuctionLength__Params {
  _event: NewMaxAuctionLength;

  constructor(event: NewMaxAuctionLength) {
    this._event = event;
  }

  get maxAuctionLength(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewOperatorAddress extends ethereum.Event {
  get params(): NewOperatorAddress__Params {
    return new NewOperatorAddress__Params(this);
  }
}

export class NewOperatorAddress__Params {
  _event: NewOperatorAddress;

  constructor(event: NewOperatorAddress) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TokenRecovery extends ethereum.Event {
  get params(): TokenRecovery__Params {
    return new TokenRecovery__Params(this);
  }
}

export class TokenRecovery__Params {
  _event: TokenRecovery;

  constructor(event: TokenRecovery) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class WhitelistAdd extends ethereum.Event {
  get params(): WhitelistAdd__Params {
    return new WhitelistAdd__Params(this);
  }
}

export class WhitelistAdd__Params {
  _event: WhitelistAdd;

  constructor(event: WhitelistAdd) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class WhitelistRemove extends ethereum.Event {
  get params(): WhitelistRemove__Params {
    return new WhitelistRemove__Params(this);
  }
}

export class WhitelistRemove__Params {
  _event: WhitelistRemove;

  constructor(event: WhitelistRemove) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FarmAuction__auctionBidsResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }
}

export class FarmAuction__auctionsResult {
  value0: i32;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: i32,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }
}

export class FarmAuction__viewAuctionsResultValue0Struct extends ethereum.Tuple {
  get status(): i32 {
    return this[0].toI32();
  }

  get startBlock(): BigInt {
    return this[1].toBigInt();
  }

  get endBlock(): BigInt {
    return this[2].toBigInt();
  }

  get initialBidAmount(): BigInt {
    return this[3].toBigInt();
  }

  get leaderboard(): BigInt {
    return this[4].toBigInt();
  }

  get leaderboardThreshold(): BigInt {
    return this[5].toBigInt();
  }
}

export class FarmAuction__viewAuctionsResult {
  value0: Array<FarmAuction__viewAuctionsResultValue0Struct>;
  value1: BigInt;

  constructor(
    value0: Array<FarmAuction__viewAuctionsResultValue0Struct>,
    value1: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTupleArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class FarmAuction__viewBidderAuctionsResult {
  value0: Array<BigInt>;
  value1: Array<BigInt>;
  value2: Array<boolean>;
  value3: BigInt;

  constructor(
    value0: Array<BigInt>,
    value1: Array<BigInt>,
    value2: Array<boolean>,
    value3: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigIntArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    map.set("value2", ethereum.Value.fromBooleanArray(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class FarmAuction__viewBiddersResult {
  value0: Array<Address>;
  value1: BigInt;

  constructor(value0: Array<Address>, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class FarmAuction__viewBidsPerAuctionResultValue0Struct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get hasClaimed(): boolean {
    return this[2].toBoolean();
  }
}

export class FarmAuction__viewBidsPerAuctionResult {
  value0: Array<FarmAuction__viewBidsPerAuctionResultValue0Struct>;
  value1: BigInt;

  constructor(
    value0: Array<FarmAuction__viewBidsPerAuctionResultValue0Struct>,
    value1: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTupleArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class FarmAuction extends ethereum.SmartContract {
  static bind(address: Address): FarmAuction {
    return new FarmAuction("FarmAuction", address);
  }

  auctionBids(param0: BigInt, param1: Address): FarmAuction__auctionBidsResult {
    let result = super.call(
      "auctionBids",
      "auctionBids(uint256,address):(uint256,bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ]
    );

    return new FarmAuction__auctionBidsResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_auctionBids(
    param0: BigInt,
    param1: Address
  ): ethereum.CallResult<FarmAuction__auctionBidsResult> {
    let result = super.tryCall(
      "auctionBids",
      "auctionBids(uint256,address):(uint256,bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FarmAuction__auctionBidsResult(
        value[0].toBigInt(),
        value[1].toBoolean()
      )
    );
  }

  auctions(param0: BigInt): FarmAuction__auctionsResult {
    let result = super.call(
      "auctions",
      "auctions(uint256):(uint8,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new FarmAuction__auctionsResult(
      result[0].toI32(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_auctions(
    param0: BigInt
  ): ethereum.CallResult<FarmAuction__auctionsResult> {
    let result = super.tryCall(
      "auctions",
      "auctions(uint256):(uint8,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FarmAuction__auctionsResult(
        value[0].toI32(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  champagneToken(): Address {
    let result = super.call("champagneToken", "champagneToken():(address)", []);

    return result[0].toAddress();
  }

  try_champagneToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "champagneToken",
      "champagneToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  claimable(auctionId: BigInt, bidder: Address): boolean {
    let result = super.call("claimable", "claimable(uint256,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(auctionId),
      ethereum.Value.fromAddress(bidder),
    ]);

    return result[0].toBoolean();
  }

  try_claimable(
    auctionId: BigInt,
    bidder: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "claimable",
      "claimable(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(auctionId),
        ethereum.Value.fromAddress(bidder),
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  currentAuctionId(): BigInt {
    let result = super.call(
      "currentAuctionId",
      "currentAuctionId():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_currentAuctionId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentAuctionId",
      "currentAuctionId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxAuctionLength(): BigInt {
    let result = super.call(
      "maxAuctionLength",
      "maxAuctionLength():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxAuctionLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxAuctionLength",
      "maxAuctionLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  operatorAddress(): Address {
    let result = super.call(
      "operatorAddress",
      "operatorAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_operatorAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "operatorAddress",
      "operatorAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalCollected(): BigInt {
    let result = super.call("totalCollected", "totalCollected():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalCollected(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalCollected",
      "totalCollected():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  viewAuctions(cursor: BigInt, size: BigInt): FarmAuction__viewAuctionsResult {
    let result = super.call(
      "viewAuctions",
      "viewAuctions(uint256,uint256):((uint8,uint256,uint256,uint256,uint256,uint256)[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(cursor),
        ethereum.Value.fromUnsignedBigInt(size),
      ]
    );

    return new FarmAuction__viewAuctionsResult(
      result[0].toTupleArray<FarmAuction__viewAuctionsResultValue0Struct>(),
      result[1].toBigInt()
    );
  }

  try_viewAuctions(
    cursor: BigInt,
    size: BigInt
  ): ethereum.CallResult<FarmAuction__viewAuctionsResult> {
    let result = super.tryCall(
      "viewAuctions",
      "viewAuctions(uint256,uint256):((uint8,uint256,uint256,uint256,uint256,uint256)[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(cursor),
        ethereum.Value.fromUnsignedBigInt(size),
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FarmAuction__viewAuctionsResult(
        value[0].toTupleArray<FarmAuction__viewAuctionsResultValue0Struct>(),
        value[1].toBigInt()
      )
    );
  }

  viewBidderAuctions(
    bidder: Address,
    cursor: BigInt,
    size: BigInt
  ): FarmAuction__viewBidderAuctionsResult {
    let result = super.call(
      "viewBidderAuctions",
      "viewBidderAuctions(address,uint256,uint256):(uint256[],uint256[],bool[],uint256)",
      [
        ethereum.Value.fromAddress(bidder),
        ethereum.Value.fromUnsignedBigInt(cursor),
        ethereum.Value.fromUnsignedBigInt(size),
      ]
    );

    return new FarmAuction__viewBidderAuctionsResult(
      result[0].toBigIntArray(),
      result[1].toBigIntArray(),
      result[2].toBooleanArray(),
      result[3].toBigInt()
    );
  }

  try_viewBidderAuctions(
    bidder: Address,
    cursor: BigInt,
    size: BigInt
  ): ethereum.CallResult<FarmAuction__viewBidderAuctionsResult> {
    let result = super.tryCall(
      "viewBidderAuctions",
      "viewBidderAuctions(address,uint256,uint256):(uint256[],uint256[],bool[],uint256)",
      [
        ethereum.Value.fromAddress(bidder),
        ethereum.Value.fromUnsignedBigInt(cursor),
        ethereum.Value.fromUnsignedBigInt(size),
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FarmAuction__viewBidderAuctionsResult(
        value[0].toBigIntArray(),
        value[1].toBigIntArray(),
        value[2].toBooleanArray(),
        value[3].toBigInt()
      )
    );
  }

  viewBidders(cursor: BigInt, size: BigInt): FarmAuction__viewBiddersResult {
    let result = super.call(
      "viewBidders",
      "viewBidders(uint256,uint256):(address[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(cursor),
        ethereum.Value.fromUnsignedBigInt(size),
      ]
    );

    return new FarmAuction__viewBiddersResult(
      result[0].toAddressArray(),
      result[1].toBigInt()
    );
  }

  try_viewBidders(
    cursor: BigInt,
    size: BigInt
  ): ethereum.CallResult<FarmAuction__viewBiddersResult> {
    let result = super.tryCall(
      "viewBidders",
      "viewBidders(uint256,uint256):(address[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(cursor),
        ethereum.Value.fromUnsignedBigInt(size),
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FarmAuction__viewBiddersResult(
        value[0].toAddressArray(),
        value[1].toBigInt()
      )
    );
  }

  viewBidsPerAuction(
    auctionId: BigInt,
    cursor: BigInt,
    size: BigInt
  ): FarmAuction__viewBidsPerAuctionResult {
    let result = super.call(
      "viewBidsPerAuction",
      "viewBidsPerAuction(uint256,uint256,uint256):((address,uint256,bool)[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(auctionId),
        ethereum.Value.fromUnsignedBigInt(cursor),
        ethereum.Value.fromUnsignedBigInt(size),
      ]
    );

    return new FarmAuction__viewBidsPerAuctionResult(
      result[0].toTupleArray<FarmAuction__viewBidsPerAuctionResultValue0Struct>(),
      result[1].toBigInt()
    );
  }

  try_viewBidsPerAuction(
    auctionId: BigInt,
    cursor: BigInt,
    size: BigInt
  ): ethereum.CallResult<FarmAuction__viewBidsPerAuctionResult> {
    let result = super.tryCall(
      "viewBidsPerAuction",
      "viewBidsPerAuction(uint256,uint256,uint256):((address,uint256,bool)[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(auctionId),
        ethereum.Value.fromUnsignedBigInt(cursor),
        ethereum.Value.fromUnsignedBigInt(size),
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FarmAuction__viewBidsPerAuctionResult(
        value[0].toTupleArray<FarmAuction__viewBidsPerAuctionResultValue0Struct>(),
        value[1].toBigInt()
      )
    );
  }

  whitelisted(bidder: Address): boolean {
    let result = super.call("whitelisted", "whitelisted(address):(bool)", [
      ethereum.Value.fromAddress(bidder),
    ]);

    return result[0].toBoolean();
  }

  try_whitelisted(bidder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("whitelisted", "whitelisted(address):(bool)", [
      ethereum.Value.fromAddress(bidder),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _champagneToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _operatorAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _maxAuctionLength(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddWhitelistCall extends ethereum.Call {
  get inputs(): AddWhitelistCall__Inputs {
    return new AddWhitelistCall__Inputs(this);
  }

  get outputs(): AddWhitelistCall__Outputs {
    return new AddWhitelistCall__Outputs(this);
  }
}

export class AddWhitelistCall__Inputs {
  _call: AddWhitelistCall;

  constructor(call: AddWhitelistCall) {
    this._call = call;
  }

  get _bidders(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class AddWhitelistCall__Outputs {
  _call: AddWhitelistCall;

  constructor(call: AddWhitelistCall) {
    this._call = call;
  }
}

export class BidCall extends ethereum.Call {
  get inputs(): BidCall__Inputs {
    return new BidCall__Inputs(this);
  }

  get outputs(): BidCall__Outputs {
    return new BidCall__Outputs(this);
  }
}

export class BidCall__Inputs {
  _call: BidCall;

  constructor(call: BidCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BidCall__Outputs {
  _call: BidCall;

  constructor(call: BidCall) {
    this._call = call;
  }
}

export class ClaimAuctionCall extends ethereum.Call {
  get inputs(): ClaimAuctionCall__Inputs {
    return new ClaimAuctionCall__Inputs(this);
  }

  get outputs(): ClaimAuctionCall__Outputs {
    return new ClaimAuctionCall__Outputs(this);
  }
}

export class ClaimAuctionCall__Inputs {
  _call: ClaimAuctionCall;

  constructor(call: ClaimAuctionCall) {
    this._call = call;
  }

  get _auctionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimAuctionCall__Outputs {
  _call: ClaimAuctionCall;

  constructor(call: ClaimAuctionCall) {
    this._call = call;
  }
}

export class ClaimAuctionLeaderboardCall extends ethereum.Call {
  get inputs(): ClaimAuctionLeaderboardCall__Inputs {
    return new ClaimAuctionLeaderboardCall__Inputs(this);
  }

  get outputs(): ClaimAuctionLeaderboardCall__Outputs {
    return new ClaimAuctionLeaderboardCall__Outputs(this);
  }
}

export class ClaimAuctionLeaderboardCall__Inputs {
  _call: ClaimAuctionLeaderboardCall;

  constructor(call: ClaimAuctionLeaderboardCall) {
    this._call = call;
  }

  get _auctionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _bidders(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class ClaimAuctionLeaderboardCall__Outputs {
  _call: ClaimAuctionLeaderboardCall;

  constructor(call: ClaimAuctionLeaderboardCall) {
    this._call = call;
  }
}

export class CloseAuctionCall extends ethereum.Call {
  get inputs(): CloseAuctionCall__Inputs {
    return new CloseAuctionCall__Inputs(this);
  }

  get outputs(): CloseAuctionCall__Outputs {
    return new CloseAuctionCall__Outputs(this);
  }
}

export class CloseAuctionCall__Inputs {
  _call: CloseAuctionCall;

  constructor(call: CloseAuctionCall) {
    this._call = call;
  }

  get _bidLimit(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CloseAuctionCall__Outputs {
  _call: CloseAuctionCall;

  constructor(call: CloseAuctionCall) {
    this._call = call;
  }
}

export class RecoverTokenCall extends ethereum.Call {
  get inputs(): RecoverTokenCall__Inputs {
    return new RecoverTokenCall__Inputs(this);
  }

  get outputs(): RecoverTokenCall__Outputs {
    return new RecoverTokenCall__Outputs(this);
  }
}

export class RecoverTokenCall__Inputs {
  _call: RecoverTokenCall;

  constructor(call: RecoverTokenCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RecoverTokenCall__Outputs {
  _call: RecoverTokenCall;

  constructor(call: RecoverTokenCall) {
    this._call = call;
  }
}

export class RemoveWhitelistCall extends ethereum.Call {
  get inputs(): RemoveWhitelistCall__Inputs {
    return new RemoveWhitelistCall__Inputs(this);
  }

  get outputs(): RemoveWhitelistCall__Outputs {
    return new RemoveWhitelistCall__Outputs(this);
  }
}

export class RemoveWhitelistCall__Inputs {
  _call: RemoveWhitelistCall;

  constructor(call: RemoveWhitelistCall) {
    this._call = call;
  }

  get _bidders(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class RemoveWhitelistCall__Outputs {
  _call: RemoveWhitelistCall;

  constructor(call: RemoveWhitelistCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetMaxAuctionLengthCall extends ethereum.Call {
  get inputs(): SetMaxAuctionLengthCall__Inputs {
    return new SetMaxAuctionLengthCall__Inputs(this);
  }

  get outputs(): SetMaxAuctionLengthCall__Outputs {
    return new SetMaxAuctionLengthCall__Outputs(this);
  }
}

export class SetMaxAuctionLengthCall__Inputs {
  _call: SetMaxAuctionLengthCall;

  constructor(call: SetMaxAuctionLengthCall) {
    this._call = call;
  }

  get _maxAuctionLength(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxAuctionLengthCall__Outputs {
  _call: SetMaxAuctionLengthCall;

  constructor(call: SetMaxAuctionLengthCall) {
    this._call = call;
  }
}

export class SetOperatorAddressCall extends ethereum.Call {
  get inputs(): SetOperatorAddressCall__Inputs {
    return new SetOperatorAddressCall__Inputs(this);
  }

  get outputs(): SetOperatorAddressCall__Outputs {
    return new SetOperatorAddressCall__Outputs(this);
  }
}

export class SetOperatorAddressCall__Inputs {
  _call: SetOperatorAddressCall;

  constructor(call: SetOperatorAddressCall) {
    this._call = call;
  }

  get _operatorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOperatorAddressCall__Outputs {
  _call: SetOperatorAddressCall;

  constructor(call: SetOperatorAddressCall) {
    this._call = call;
  }
}

export class StartAuctionCall extends ethereum.Call {
  get inputs(): StartAuctionCall__Inputs {
    return new StartAuctionCall__Inputs(this);
  }

  get outputs(): StartAuctionCall__Outputs {
    return new StartAuctionCall__Outputs(this);
  }
}

export class StartAuctionCall__Inputs {
  _call: StartAuctionCall;

  constructor(call: StartAuctionCall) {
    this._call = call;
  }

  get _startBlock(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _endBlock(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _initialBidAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _leaderboard(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class StartAuctionCall__Outputs {
  _call: StartAuctionCall;

  constructor(call: StartAuctionCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
