// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class NewCompetitionStatus extends ethereum.Event {
  get params(): NewCompetitionStatus__Params {
    return new NewCompetitionStatus__Params(this);
  }
}

export class NewCompetitionStatus__Params {
  _event: NewCompetitionStatus;

  constructor(event: NewCompetitionStatus) {
    this._event = event;
  }

  get status(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get competitionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TeamRewardsUpdate extends ethereum.Event {
  get params(): TeamRewardsUpdate__Params {
    return new TeamRewardsUpdate__Params(this);
  }
}

export class TeamRewardsUpdate__Params {
  _event: TeamRewardsUpdate;

  constructor(event: TeamRewardsUpdate) {
    this._event = event;
  }

  get teamId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get competitionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UserRegister extends ethereum.Event {
  get params(): UserRegister__Params {
    return new UserRegister__Params(this);
  }
}

export class UserRegister__Params {
  _event: UserRegister;

  constructor(event: UserRegister) {
    this._event = event;
  }

  get userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get teamId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get competitionId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UserUpdateMultiple extends ethereum.Event {
  get params(): UserUpdateMultiple__Params {
    return new UserUpdateMultiple__Params(this);
  }
}

export class UserUpdateMultiple__Params {
  _event: UserUpdateMultiple;

  constructor(event: UserUpdateMultiple) {
    this._event = event;
  }

  get userAddresses(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get rewardGroup(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get competitionId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class WinningTeam extends ethereum.Event {
  get params(): WinningTeam__Params {
    return new WinningTeam__Params(this);
  }
}

export class WinningTeam__Params {
  _event: WinningTeam;

  constructor(event: WinningTeam) {
    this._event = event;
  }

  get teamId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get competitionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TradingCompetitionV2__claimInformationResult {
  value0: boolean;
  value1: boolean;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: boolean;

  constructor(
    value0: boolean,
    value1: boolean,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromBoolean(this.value8));
    return map;
  }
}

export class TradingCompetitionV2__userTradingStatsResult {
  value0: BigInt;
  value1: BigInt;
  value2: boolean;
  value3: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: boolean,
    value3: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    return map;
  }
}

export class TradingCompetitionV2__viewRewardTeamsResultValue0Struct extends ethereum.Tuple {
  get userCampaignId(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get chamRewards(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get lazioRewards(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get portoRewards(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get santosRewards(): Array<BigInt> {
    return this[4].toBigIntArray();
  }

  get pointUsers(): Array<BigInt> {
    return this[5].toBigIntArray();
  }
}

export class TradingCompetitionV2 extends ethereum.SmartContract {
  static bind(address: Address): TradingCompetitionV2 {
    return new TradingCompetitionV2("TradingCompetitionV2", address);
  }

  bunnyId(): i32 {
    let result = super.call("bunnyId", "bunnyId():(uint8)", []);

    return result[0].toI32();
  }

  try_bunnyId(): ethereum.CallResult<i32> {
    let result = super.tryCall("bunnyId", "bunnyId():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  bunnyMintingStation(): Address {
    let result = super.call(
      "bunnyMintingStation",
      "bunnyMintingStation():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_bunnyMintingStation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "bunnyMintingStation",
      "bunnyMintingStation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  champagneToken(): Address {
    let result = super.call("champagneToken", "champagneToken():(address)", []);

    return result[0].toAddress();
  }

  try_champagneToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "champagneToken",
      "champagneToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  claimInformation(
    _userAddress: Address
  ): TradingCompetitionV2__claimInformationResult {
    let result = super.call(
      "claimInformation",
      "claimInformation(address):(bool,bool,uint256,uint256,uint256,uint256,uint256,uint256,bool)",
      [ethereum.Value.fromAddress(_userAddress)]
    );

    return new TradingCompetitionV2__claimInformationResult(
      result[0].toBoolean(),
      result[1].toBoolean(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBoolean()
    );
  }

  try_claimInformation(
    _userAddress: Address
  ): ethereum.CallResult<TradingCompetitionV2__claimInformationResult> {
    let result = super.tryCall(
      "claimInformation",
      "claimInformation(address):(bool,bool,uint256,uint256,uint256,uint256,uint256,uint256,bool)",
      [ethereum.Value.fromAddress(_userAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TradingCompetitionV2__claimInformationResult(
        value[0].toBoolean(),
        value[1].toBoolean(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBoolean()
      )
    );
  }

  competitionId(): BigInt {
    let result = super.call("competitionId", "competitionId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_competitionId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "competitionId",
      "competitionId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentStatus(): i32 {
    let result = super.call("currentStatus", "currentStatus():(uint8)", []);

    return result[0].toI32();
  }

  try_currentStatus(): ethereum.CallResult<i32> {
    let result = super.tryCall("currentStatus", "currentStatus():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  lazioToken(): Address {
    let result = super.call("lazioToken", "lazioToken():(address)", []);

    return result[0].toAddress();
  }

  try_lazioToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("lazioToken", "lazioToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  numberTeams(): BigInt {
    let result = super.call("numberTeams", "numberTeams():(uint256)", []);

    return result[0].toBigInt();
  }

  try_numberTeams(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("numberTeams", "numberTeams():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  champagneProfile(): Address {
    let result = super.call(
      "champagneProfile",
      "champagneProfile():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_champagneProfile(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "champagneProfile",
      "champagneProfile():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  portoToken(): Address {
    let result = super.call("portoToken", "portoToken():(address)", []);

    return result[0].toAddress();
  }

  try_portoToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("portoToken", "portoToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  santosToken(): Address {
    let result = super.call("santosToken", "santosToken():(address)", []);

    return result[0].toAddress();
  }

  try_santosToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("santosToken", "santosToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenURI(): string {
    let result = super.call("tokenURI", "tokenURI():(string)", []);

    return result[0].toString();
  }

  try_tokenURI(): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  userTradingStats(
    param0: Address
  ): TradingCompetitionV2__userTradingStatsResult {
    let result = super.call(
      "userTradingStats",
      "userTradingStats(address):(uint256,uint256,bool,bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new TradingCompetitionV2__userTradingStatsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBoolean(),
      result[3].toBoolean()
    );
  }

  try_userTradingStats(
    param0: Address
  ): ethereum.CallResult<TradingCompetitionV2__userTradingStatsResult> {
    let result = super.tryCall(
      "userTradingStats",
      "userTradingStats(address):(uint256,uint256,bool,bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TradingCompetitionV2__userTradingStatsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBoolean(),
        value[3].toBoolean()
      )
    );
  }

  viewRewardTeams(): Array<TradingCompetitionV2__viewRewardTeamsResultValue0Struct> {
    let result = super.call(
      "viewRewardTeams",
      "viewRewardTeams():((uint256[5],uint256[5],uint256[5],uint256[5],uint256[5],uint256[5])[])",
      []
    );

    return result[0].toTupleArray<TradingCompetitionV2__viewRewardTeamsResultValue0Struct>();
  }

  try_viewRewardTeams(): ethereum.CallResult<
    Array<TradingCompetitionV2__viewRewardTeamsResultValue0Struct>
  > {
    let result = super.tryCall(
      "viewRewardTeams",
      "viewRewardTeams():((uint256[5],uint256[5],uint256[5],uint256[5],uint256[5],uint256[5])[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<TradingCompetitionV2__viewRewardTeamsResultValue0Struct>()
    );
  }

  winningTeamId(): BigInt {
    let result = super.call("winningTeamId", "winningTeamId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_winningTeamId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "winningTeamId",
      "winningTeamId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _champagneProfileAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _bunnyStationAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _champagneTokenAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _lazioTokenAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _portoTokenAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _santosTokenAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _competitionId(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimChamRemainderCall extends ethereum.Call {
  get inputs(): ClaimChamRemainderCall__Inputs {
    return new ClaimChamRemainderCall__Inputs(this);
  }

  get outputs(): ClaimChamRemainderCall__Outputs {
    return new ClaimChamRemainderCall__Outputs(this);
  }
}

export class ClaimChamRemainderCall__Inputs {
  _call: ClaimChamRemainderCall;

  constructor(call: ClaimChamRemainderCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimChamRemainderCall__Outputs {
  _call: ClaimChamRemainderCall;

  constructor(call: ClaimChamRemainderCall) {
    this._call = call;
  }
}

export class ClaimLazioRemainderCall extends ethereum.Call {
  get inputs(): ClaimLazioRemainderCall__Inputs {
    return new ClaimLazioRemainderCall__Inputs(this);
  }

  get outputs(): ClaimLazioRemainderCall__Outputs {
    return new ClaimLazioRemainderCall__Outputs(this);
  }
}

export class ClaimLazioRemainderCall__Inputs {
  _call: ClaimLazioRemainderCall;

  constructor(call: ClaimLazioRemainderCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimLazioRemainderCall__Outputs {
  _call: ClaimLazioRemainderCall;

  constructor(call: ClaimLazioRemainderCall) {
    this._call = call;
  }
}

export class ClaimPortoRemainderCall extends ethereum.Call {
  get inputs(): ClaimPortoRemainderCall__Inputs {
    return new ClaimPortoRemainderCall__Inputs(this);
  }

  get outputs(): ClaimPortoRemainderCall__Outputs {
    return new ClaimPortoRemainderCall__Outputs(this);
  }
}

export class ClaimPortoRemainderCall__Inputs {
  _call: ClaimPortoRemainderCall;

  constructor(call: ClaimPortoRemainderCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimPortoRemainderCall__Outputs {
  _call: ClaimPortoRemainderCall;

  constructor(call: ClaimPortoRemainderCall) {
    this._call = call;
  }
}

export class ClaimRewardCall extends ethereum.Call {
  get inputs(): ClaimRewardCall__Inputs {
    return new ClaimRewardCall__Inputs(this);
  }

  get outputs(): ClaimRewardCall__Outputs {
    return new ClaimRewardCall__Outputs(this);
  }
}

export class ClaimRewardCall__Inputs {
  _call: ClaimRewardCall;

  constructor(call: ClaimRewardCall) {
    this._call = call;
  }
}

export class ClaimRewardCall__Outputs {
  _call: ClaimRewardCall;

  constructor(call: ClaimRewardCall) {
    this._call = call;
  }
}

export class ClaimSantosRemainderCall extends ethereum.Call {
  get inputs(): ClaimSantosRemainderCall__Inputs {
    return new ClaimSantosRemainderCall__Inputs(this);
  }

  get outputs(): ClaimSantosRemainderCall__Outputs {
    return new ClaimSantosRemainderCall__Outputs(this);
  }
}

export class ClaimSantosRemainderCall__Inputs {
  _call: ClaimSantosRemainderCall;

  constructor(call: ClaimSantosRemainderCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimSantosRemainderCall__Outputs {
  _call: ClaimSantosRemainderCall;

  constructor(call: ClaimSantosRemainderCall) {
    this._call = call;
  }
}

export class RegisterCall extends ethereum.Call {
  get inputs(): RegisterCall__Inputs {
    return new RegisterCall__Inputs(this);
  }

  get outputs(): RegisterCall__Outputs {
    return new RegisterCall__Outputs(this);
  }
}

export class RegisterCall__Inputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }
}

export class RegisterCall__Outputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateCompetitionStatusCall extends ethereum.Call {
  get inputs(): UpdateCompetitionStatusCall__Inputs {
    return new UpdateCompetitionStatusCall__Inputs(this);
  }

  get outputs(): UpdateCompetitionStatusCall__Outputs {
    return new UpdateCompetitionStatusCall__Outputs(this);
  }
}

export class UpdateCompetitionStatusCall__Inputs {
  _call: UpdateCompetitionStatusCall;

  constructor(call: UpdateCompetitionStatusCall) {
    this._call = call;
  }

  get _status(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class UpdateCompetitionStatusCall__Outputs {
  _call: UpdateCompetitionStatusCall;

  constructor(call: UpdateCompetitionStatusCall) {
    this._call = call;
  }
}

export class UpdateTeamRewardsCall extends ethereum.Call {
  get inputs(): UpdateTeamRewardsCall__Inputs {
    return new UpdateTeamRewardsCall__Inputs(this);
  }

  get outputs(): UpdateTeamRewardsCall__Outputs {
    return new UpdateTeamRewardsCall__Outputs(this);
  }
}

export class UpdateTeamRewardsCall__Inputs {
  _call: UpdateTeamRewardsCall;

  constructor(call: UpdateTeamRewardsCall) {
    this._call = call;
  }

  get _teamId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _userCampaignIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _chamRewards(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _lazioRewards(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _portoRewards(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get _santosRewards(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }

  get _pointRewards(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }
}

export class UpdateTeamRewardsCall__Outputs {
  _call: UpdateTeamRewardsCall;

  constructor(call: UpdateTeamRewardsCall) {
    this._call = call;
  }
}

export class UpdateUserStatusMultipleCall extends ethereum.Call {
  get inputs(): UpdateUserStatusMultipleCall__Inputs {
    return new UpdateUserStatusMultipleCall__Inputs(this);
  }

  get outputs(): UpdateUserStatusMultipleCall__Outputs {
    return new UpdateUserStatusMultipleCall__Outputs(this);
  }
}

export class UpdateUserStatusMultipleCall__Inputs {
  _call: UpdateUserStatusMultipleCall;

  constructor(call: UpdateUserStatusMultipleCall) {
    this._call = call;
  }

  get _addressesToUpdate(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _rewardGroup(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateUserStatusMultipleCall__Outputs {
  _call: UpdateUserStatusMultipleCall;

  constructor(call: UpdateUserStatusMultipleCall) {
    this._call = call;
  }
}

export class UpdateWinningTeamAndTokenURIAndBunnyIdCall extends ethereum.Call {
  get inputs(): UpdateWinningTeamAndTokenURIAndBunnyIdCall__Inputs {
    return new UpdateWinningTeamAndTokenURIAndBunnyIdCall__Inputs(this);
  }

  get outputs(): UpdateWinningTeamAndTokenURIAndBunnyIdCall__Outputs {
    return new UpdateWinningTeamAndTokenURIAndBunnyIdCall__Outputs(this);
  }
}

export class UpdateWinningTeamAndTokenURIAndBunnyIdCall__Inputs {
  _call: UpdateWinningTeamAndTokenURIAndBunnyIdCall;

  constructor(call: UpdateWinningTeamAndTokenURIAndBunnyIdCall) {
    this._call = call;
  }

  get _winningTeamId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tokenURI(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _bunnyId(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class UpdateWinningTeamAndTokenURIAndBunnyIdCall__Outputs {
  _call: UpdateWinningTeamAndTokenURIAndBunnyIdCall;

  constructor(call: UpdateWinningTeamAndTokenURIAndBunnyIdCall) {
    this._call = call;
  }
}
