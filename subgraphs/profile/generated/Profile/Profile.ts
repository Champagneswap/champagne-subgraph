// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TeamAdd extends ethereum.Event {
  get params(): TeamAdd__Params {
    return new TeamAdd__Params(this);
  }
}

export class TeamAdd__Params {
  _event: TeamAdd;

  constructor(event: TeamAdd) {
    this._event = event;
  }

  get teamId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get teamName(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class TeamPointIncrease extends ethereum.Event {
  get params(): TeamPointIncrease__Params {
    return new TeamPointIncrease__Params(this);
  }
}

export class TeamPointIncrease__Params {
  _event: TeamPointIncrease;

  constructor(event: TeamPointIncrease) {
    this._event = event;
  }

  get teamId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get numberPoints(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get campaignId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UserChangeTeam extends ethereum.Event {
  get params(): UserChangeTeam__Params {
    return new UserChangeTeam__Params(this);
  }
}

export class UserChangeTeam__Params {
  _event: UserChangeTeam;

  constructor(event: UserChangeTeam) {
    this._event = event;
  }

  get userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oldTeamId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newTeamId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UserNew extends ethereum.Event {
  get params(): UserNew__Params {
    return new UserNew__Params(this);
  }
}

export class UserNew__Params {
  _event: UserNew;

  constructor(event: UserNew) {
    this._event = event;
  }

  get userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get teamId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get nftAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class UserPause extends ethereum.Event {
  get params(): UserPause__Params {
    return new UserPause__Params(this);
  }
}

export class UserPause__Params {
  _event: UserPause;

  constructor(event: UserPause) {
    this._event = event;
  }

  get userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get teamId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UserPointIncrease extends ethereum.Event {
  get params(): UserPointIncrease__Params {
    return new UserPointIncrease__Params(this);
  }
}

export class UserPointIncrease__Params {
  _event: UserPointIncrease;

  constructor(event: UserPointIncrease) {
    this._event = event;
  }

  get userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get numberPoints(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get campaignId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UserPointIncreaseMultiple extends ethereum.Event {
  get params(): UserPointIncreaseMultiple__Params {
    return new UserPointIncreaseMultiple__Params(this);
  }
}

export class UserPointIncreaseMultiple__Params {
  _event: UserPointIncreaseMultiple;

  constructor(event: UserPointIncreaseMultiple) {
    this._event = event;
  }

  get userAddresses(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get numberPoints(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get campaignId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UserReactivate extends ethereum.Event {
  get params(): UserReactivate__Params {
    return new UserReactivate__Params(this);
  }
}

export class UserReactivate__Params {
  _event: UserReactivate;

  constructor(event: UserReactivate) {
    this._event = event;
  }

  get userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get teamId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get nftAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class UserUpdate extends ethereum.Event {
  get params(): UserUpdate__Params {
    return new UserUpdate__Params(this);
  }
}

export class UserUpdate__Params {
  _event: UserUpdate;

  constructor(event: UserUpdate) {
    this._event = event;
  }

  get userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nftAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Profile__getTeamProfileResult {
  value0: string;
  value1: string;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;

  constructor(
    value0: string,
    value1: string,
    value2: BigInt,
    value3: BigInt,
    value4: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    return map;
  }
}

export class Profile__getUserProfileResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: Address;
  value4: BigInt;
  value5: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: Address,
    value4: BigInt,
    value5: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }
}

export class Profile extends ethereum.SmartContract {
  static bind(address: Address): Profile {
    return new Profile("Profile", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  NFT_ROLE(): Bytes {
    let result = super.call("NFT_ROLE", "NFT_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_NFT_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("NFT_ROLE", "NFT_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  POINT_ROLE(): Bytes {
    let result = super.call("POINT_ROLE", "POINT_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_POINT_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("POINT_ROLE", "POINT_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  SPECIAL_ROLE(): Bytes {
    let result = super.call("SPECIAL_ROLE", "SPECIAL_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_SPECIAL_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("SPECIAL_ROLE", "SPECIAL_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  champagneToken(): Address {
    let result = super.call("champagneToken", "champagneToken():(address)", []);

    return result[0].toAddress();
  }

  try_champagneToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "champagneToken",
      "champagneToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index),
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index),
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTeamProfile(_teamId: BigInt): Profile__getTeamProfileResult {
    let result = super.call(
      "getTeamProfile",
      "getTeamProfile(uint256):(string,string,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(_teamId)]
    );

    return new Profile__getTeamProfileResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBoolean()
    );
  }

  try_getTeamProfile(
    _teamId: BigInt
  ): ethereum.CallResult<Profile__getTeamProfileResult> {
    let result = super.tryCall(
      "getTeamProfile",
      "getTeamProfile(uint256):(string,string,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(_teamId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Profile__getTeamProfileResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBoolean()
      )
    );
  }

  getUserProfile(_userAddress: Address): Profile__getUserProfileResult {
    let result = super.call(
      "getUserProfile",
      "getUserProfile(address):(uint256,uint256,uint256,address,uint256,bool)",
      [ethereum.Value.fromAddress(_userAddress)]
    );

    return new Profile__getUserProfileResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toBoolean()
    );
  }

  try_getUserProfile(
    _userAddress: Address
  ): ethereum.CallResult<Profile__getUserProfileResult> {
    let result = super.tryCall(
      "getUserProfile",
      "getUserProfile(address):(uint256,uint256,uint256,address,uint256,bool)",
      [ethereum.Value.fromAddress(_userAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Profile__getUserProfileResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toBoolean()
      )
    );
  }

  getUserStatus(_userAddress: Address): boolean {
    let result = super.call("getUserStatus", "getUserStatus(address):(bool)", [
      ethereum.Value.fromAddress(_userAddress),
    ]);

    return result[0].toBoolean();
  }

  try_getUserStatus(_userAddress: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getUserStatus",
      "getUserStatus(address):(bool)",
      [ethereum.Value.fromAddress(_userAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hasRegistered(param0: Address): boolean {
    let result = super.call("hasRegistered", "hasRegistered(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBoolean();
  }

  try_hasRegistered(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasRegistered",
      "hasRegistered(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  numberActiveProfiles(): BigInt {
    let result = super.call(
      "numberActiveProfiles",
      "numberActiveProfiles():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_numberActiveProfiles(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numberActiveProfiles",
      "numberActiveProfiles():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numberChamToReactivate(): BigInt {
    let result = super.call(
      "numberChamToReactivate",
      "numberChamToReactivate():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_numberChamToReactivate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numberChamToReactivate",
      "numberChamToReactivate():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numberChamToRegister(): BigInt {
    let result = super.call(
      "numberChamToRegister",
      "numberChamToRegister():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_numberChamToRegister(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numberChamToRegister",
      "numberChamToRegister():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numberChamToUpdate(): BigInt {
    let result = super.call(
      "numberChamToUpdate",
      "numberChamToUpdate():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_numberChamToUpdate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numberChamToUpdate",
      "numberChamToUpdate():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numberTeams(): BigInt {
    let result = super.call("numberTeams", "numberTeams():(uint256)", []);

    return result[0].toBigInt();
  }

  try_numberTeams(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("numberTeams", "numberTeams():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3),
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3),
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _champagneToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _numberChamToReactivate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _numberChamToRegister(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _numberChamToUpdate(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddNftAddressCall extends ethereum.Call {
  get inputs(): AddNftAddressCall__Inputs {
    return new AddNftAddressCall__Inputs(this);
  }

  get outputs(): AddNftAddressCall__Outputs {
    return new AddNftAddressCall__Outputs(this);
  }
}

export class AddNftAddressCall__Inputs {
  _call: AddNftAddressCall;

  constructor(call: AddNftAddressCall) {
    this._call = call;
  }

  get _nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddNftAddressCall__Outputs {
  _call: AddNftAddressCall;

  constructor(call: AddNftAddressCall) {
    this._call = call;
  }
}

export class AddTeamCall extends ethereum.Call {
  get inputs(): AddTeamCall__Inputs {
    return new AddTeamCall__Inputs(this);
  }

  get outputs(): AddTeamCall__Outputs {
    return new AddTeamCall__Outputs(this);
  }
}

export class AddTeamCall__Inputs {
  _call: AddTeamCall;

  constructor(call: AddTeamCall) {
    this._call = call;
  }

  get _teamName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _teamDescription(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddTeamCall__Outputs {
  _call: AddTeamCall;

  constructor(call: AddTeamCall) {
    this._call = call;
  }
}

export class ChangeTeamCall extends ethereum.Call {
  get inputs(): ChangeTeamCall__Inputs {
    return new ChangeTeamCall__Inputs(this);
  }

  get outputs(): ChangeTeamCall__Outputs {
    return new ChangeTeamCall__Outputs(this);
  }
}

export class ChangeTeamCall__Inputs {
  _call: ChangeTeamCall;

  constructor(call: ChangeTeamCall) {
    this._call = call;
  }

  get _userAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newTeamId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ChangeTeamCall__Outputs {
  _call: ChangeTeamCall;

  constructor(call: ChangeTeamCall) {
    this._call = call;
  }
}

export class ClaimFeeCall extends ethereum.Call {
  get inputs(): ClaimFeeCall__Inputs {
    return new ClaimFeeCall__Inputs(this);
  }

  get outputs(): ClaimFeeCall__Outputs {
    return new ClaimFeeCall__Outputs(this);
  }
}

export class ClaimFeeCall__Inputs {
  _call: ClaimFeeCall;

  constructor(call: ClaimFeeCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimFeeCall__Outputs {
  _call: ClaimFeeCall;

  constructor(call: ClaimFeeCall) {
    this._call = call;
  }
}

export class CreateProfileCall extends ethereum.Call {
  get inputs(): CreateProfileCall__Inputs {
    return new CreateProfileCall__Inputs(this);
  }

  get outputs(): CreateProfileCall__Outputs {
    return new CreateProfileCall__Outputs(this);
  }
}

export class CreateProfileCall__Inputs {
  _call: CreateProfileCall;

  constructor(call: CreateProfileCall) {
    this._call = call;
  }

  get _teamId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _nftAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateProfileCall__Outputs {
  _call: CreateProfileCall;

  constructor(call: CreateProfileCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class IncreaseTeamPointsCall extends ethereum.Call {
  get inputs(): IncreaseTeamPointsCall__Inputs {
    return new IncreaseTeamPointsCall__Inputs(this);
  }

  get outputs(): IncreaseTeamPointsCall__Outputs {
    return new IncreaseTeamPointsCall__Outputs(this);
  }
}

export class IncreaseTeamPointsCall__Inputs {
  _call: IncreaseTeamPointsCall;

  constructor(call: IncreaseTeamPointsCall) {
    this._call = call;
  }

  get _teamId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _numberPoints(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _campaignId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class IncreaseTeamPointsCall__Outputs {
  _call: IncreaseTeamPointsCall;

  constructor(call: IncreaseTeamPointsCall) {
    this._call = call;
  }
}

export class IncreaseUserPointsCall extends ethereum.Call {
  get inputs(): IncreaseUserPointsCall__Inputs {
    return new IncreaseUserPointsCall__Inputs(this);
  }

  get outputs(): IncreaseUserPointsCall__Outputs {
    return new IncreaseUserPointsCall__Outputs(this);
  }
}

export class IncreaseUserPointsCall__Inputs {
  _call: IncreaseUserPointsCall;

  constructor(call: IncreaseUserPointsCall) {
    this._call = call;
  }

  get _userAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _numberPoints(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _campaignId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class IncreaseUserPointsCall__Outputs {
  _call: IncreaseUserPointsCall;

  constructor(call: IncreaseUserPointsCall) {
    this._call = call;
  }
}

export class IncreaseUserPointsMultipleCall extends ethereum.Call {
  get inputs(): IncreaseUserPointsMultipleCall__Inputs {
    return new IncreaseUserPointsMultipleCall__Inputs(this);
  }

  get outputs(): IncreaseUserPointsMultipleCall__Outputs {
    return new IncreaseUserPointsMultipleCall__Outputs(this);
  }
}

export class IncreaseUserPointsMultipleCall__Inputs {
  _call: IncreaseUserPointsMultipleCall;

  constructor(call: IncreaseUserPointsMultipleCall) {
    this._call = call;
  }

  get _userAddresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _numberPoints(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _campaignId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class IncreaseUserPointsMultipleCall__Outputs {
  _call: IncreaseUserPointsMultipleCall;

  constructor(call: IncreaseUserPointsMultipleCall) {
    this._call = call;
  }
}

export class MakeTeamJoinableCall extends ethereum.Call {
  get inputs(): MakeTeamJoinableCall__Inputs {
    return new MakeTeamJoinableCall__Inputs(this);
  }

  get outputs(): MakeTeamJoinableCall__Outputs {
    return new MakeTeamJoinableCall__Outputs(this);
  }
}

export class MakeTeamJoinableCall__Inputs {
  _call: MakeTeamJoinableCall;

  constructor(call: MakeTeamJoinableCall) {
    this._call = call;
  }

  get _teamId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MakeTeamJoinableCall__Outputs {
  _call: MakeTeamJoinableCall;

  constructor(call: MakeTeamJoinableCall) {
    this._call = call;
  }
}

export class MakeTeamNotJoinableCall extends ethereum.Call {
  get inputs(): MakeTeamNotJoinableCall__Inputs {
    return new MakeTeamNotJoinableCall__Inputs(this);
  }

  get outputs(): MakeTeamNotJoinableCall__Outputs {
    return new MakeTeamNotJoinableCall__Outputs(this);
  }
}

export class MakeTeamNotJoinableCall__Inputs {
  _call: MakeTeamNotJoinableCall;

  constructor(call: MakeTeamNotJoinableCall) {
    this._call = call;
  }

  get _teamId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MakeTeamNotJoinableCall__Outputs {
  _call: MakeTeamNotJoinableCall;

  constructor(call: MakeTeamNotJoinableCall) {
    this._call = call;
  }
}

export class OnERC721ReceivedCall extends ethereum.Call {
  get inputs(): OnERC721ReceivedCall__Inputs {
    return new OnERC721ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC721ReceivedCall__Outputs {
    return new OnERC721ReceivedCall__Outputs(this);
  }
}

export class OnERC721ReceivedCall__Inputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class OnERC721ReceivedCall__Outputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class PauseProfileCall extends ethereum.Call {
  get inputs(): PauseProfileCall__Inputs {
    return new PauseProfileCall__Inputs(this);
  }

  get outputs(): PauseProfileCall__Outputs {
    return new PauseProfileCall__Outputs(this);
  }
}

export class PauseProfileCall__Inputs {
  _call: PauseProfileCall;

  constructor(call: PauseProfileCall) {
    this._call = call;
  }
}

export class PauseProfileCall__Outputs {
  _call: PauseProfileCall;

  constructor(call: PauseProfileCall) {
    this._call = call;
  }
}

export class ReactivateProfileCall extends ethereum.Call {
  get inputs(): ReactivateProfileCall__Inputs {
    return new ReactivateProfileCall__Inputs(this);
  }

  get outputs(): ReactivateProfileCall__Outputs {
    return new ReactivateProfileCall__Outputs(this);
  }
}

export class ReactivateProfileCall__Inputs {
  _call: ReactivateProfileCall;

  constructor(call: ReactivateProfileCall) {
    this._call = call;
  }

  get _nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ReactivateProfileCall__Outputs {
  _call: ReactivateProfileCall;

  constructor(call: ReactivateProfileCall) {
    this._call = call;
  }
}

export class RemoveTeamPointsCall extends ethereum.Call {
  get inputs(): RemoveTeamPointsCall__Inputs {
    return new RemoveTeamPointsCall__Inputs(this);
  }

  get outputs(): RemoveTeamPointsCall__Outputs {
    return new RemoveTeamPointsCall__Outputs(this);
  }
}

export class RemoveTeamPointsCall__Inputs {
  _call: RemoveTeamPointsCall;

  constructor(call: RemoveTeamPointsCall) {
    this._call = call;
  }

  get _teamId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _numberPoints(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RemoveTeamPointsCall__Outputs {
  _call: RemoveTeamPointsCall;

  constructor(call: RemoveTeamPointsCall) {
    this._call = call;
  }
}

export class RemoveUserPointsCall extends ethereum.Call {
  get inputs(): RemoveUserPointsCall__Inputs {
    return new RemoveUserPointsCall__Inputs(this);
  }

  get outputs(): RemoveUserPointsCall__Outputs {
    return new RemoveUserPointsCall__Outputs(this);
  }
}

export class RemoveUserPointsCall__Inputs {
  _call: RemoveUserPointsCall;

  constructor(call: RemoveUserPointsCall) {
    this._call = call;
  }

  get _userAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _numberPoints(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RemoveUserPointsCall__Outputs {
  _call: RemoveUserPointsCall;

  constructor(call: RemoveUserPointsCall) {
    this._call = call;
  }
}

export class RemoveUserPointsMultipleCall extends ethereum.Call {
  get inputs(): RemoveUserPointsMultipleCall__Inputs {
    return new RemoveUserPointsMultipleCall__Inputs(this);
  }

  get outputs(): RemoveUserPointsMultipleCall__Outputs {
    return new RemoveUserPointsMultipleCall__Outputs(this);
  }
}

export class RemoveUserPointsMultipleCall__Inputs {
  _call: RemoveUserPointsMultipleCall;

  constructor(call: RemoveUserPointsMultipleCall) {
    this._call = call;
  }

  get _userAddresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _numberPoints(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RemoveUserPointsMultipleCall__Outputs {
  _call: RemoveUserPointsMultipleCall;

  constructor(call: RemoveUserPointsMultipleCall) {
    this._call = call;
  }
}

export class RenameTeamCall extends ethereum.Call {
  get inputs(): RenameTeamCall__Inputs {
    return new RenameTeamCall__Inputs(this);
  }

  get outputs(): RenameTeamCall__Outputs {
    return new RenameTeamCall__Outputs(this);
  }
}

export class RenameTeamCall__Inputs {
  _call: RenameTeamCall;

  constructor(call: RenameTeamCall) {
    this._call = call;
  }

  get _teamId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _teamName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _teamDescription(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class RenameTeamCall__Outputs {
  _call: RenameTeamCall;

  constructor(call: RenameTeamCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class UpdateNumberChamCall extends ethereum.Call {
  get inputs(): UpdateNumberChamCall__Inputs {
    return new UpdateNumberChamCall__Inputs(this);
  }

  get outputs(): UpdateNumberChamCall__Outputs {
    return new UpdateNumberChamCall__Outputs(this);
  }
}

export class UpdateNumberChamCall__Inputs {
  _call: UpdateNumberChamCall;

  constructor(call: UpdateNumberChamCall) {
    this._call = call;
  }

  get _newNumberChamToReactivate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newNumberChamToRegister(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _newNumberChamToUpdate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateNumberChamCall__Outputs {
  _call: UpdateNumberChamCall;

  constructor(call: UpdateNumberChamCall) {
    this._call = call;
  }
}

export class UpdateProfileCall extends ethereum.Call {
  get inputs(): UpdateProfileCall__Inputs {
    return new UpdateProfileCall__Inputs(this);
  }

  get outputs(): UpdateProfileCall__Outputs {
    return new UpdateProfileCall__Outputs(this);
  }
}

export class UpdateProfileCall__Inputs {
  _call: UpdateProfileCall;

  constructor(call: UpdateProfileCall) {
    this._call = call;
  }

  get _nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateProfileCall__Outputs {
  _call: UpdateProfileCall;

  constructor(call: UpdateProfileCall) {
    this._call = call;
  }
}
